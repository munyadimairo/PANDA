********************************************************************************
* Authour 		  :		Munya Dimairo (mdimairo@gmail.com/m.dimairo@sheffield.ac.uk)
* Date				  :		19032020 
* Project		 	  :		PANDA 
* Project email	: 	panda-group@sheffield.ac.uk
* Task	 			  :		Example to illustrate the application of inverse normal combination test after sample size re-estimation
* Software      :   Run code in Stata
**********************************************************************************
cap prog drop ssrtest
cap prog define ssrtest, rclass

syntax , stage1wgt(real) stage2wgt(real) alpha_z(real) ///
		[stage1pval(real 999) stage2pval(real 999)  ///
		stage1zval(real 999) stage2zval(real 999)] 

************ definitions of arguments********************************************
// stage1wgt			: 	weight for stage 1 data (up to SSR)
// stage2wgt			: 	weight for stage 2 data (after SSR): 
// weights condition	: 	(stage1wgt)^2 + (stage2wgt)^2 = 1
// alpha_z				: 	set norminal significance threshold
// stage1pval			: 	p-value from stage 1 data
// stage2pval			:	p-value from stage 2 data
// stage1zval			:	Z test statistic from stage 1 data 
// stage2zval			:	Z test statistics from stage 2 data
// Note that if Z test statistics are specified, p-values are not required. 
// Similarly, if p-values are specified, Z test statistics won't be required.
********************************************************************************


	* check the specified stage weights are within acceptable range (0,1)
	if (`stage1wgt' <= 0) | (`stage1wgt' >= 1) {
	    di in error "Specified stage 1 weight must be in the interval (0,1)"
		ex 198
	}
	if (`stage2wgt' <= 0) | (`stage2wgt' >= 1) {
	    di in error "Specified stage 2 weight must be in the interval (0,1)"
		ex 198
	}
	
	* verify weights condition: (stage1wgt)^2 + (stage2wgt)^2 = 1
	local sum_wgts = (`stage1wgt'^2) + (`stage2wgt'^2)
	local check_wgt = inrange(`sum_wgts',0.999,1.001)
	if `check_wgt' == 0{
	     di in error "The sum of each weight squared must be equal to 1. That is, (stage1wgt)^2 + (stage2wgt)^2 = 1"
         ex 198
	}
		
	* check the specified stagewise p-values are within acceptable range (0,1)
	if "`stage1pval'" != "999" {
	    
	    if (`stage1pval' <= 0) | (`stage1pval' >= 1) {
			di in error "Specified stage 1 p-value must be in the interval (0,1)"
			ex 198
		}
	}
	
	if "`stage2pval'" != "999" {
	    
	    if (`stage2pval' <= 0) | (`stage2pval' >= 1) {
			di in error "Specified stage 2 p-value must be in the interval (0,1)"
			ex 198
		}
	}
	
	* check that stagewise test statistics summaries are specified (either p-values or z-values)
	if ("`stage1pval'" == "999") & ("`stage2pval'" == "999") & ("`stage1zval'"== "999") & ("`stage2zval'" == "999") {
	    di in error "Stagewise summary statistics must be specified: either in terms of p-values or z-values"
		ex 198
	} 
		
	* if p-values are specified then calculate the stagewise z critical values
	forvalues i = 1/2 {
	    if ("`stage`i'pval'" != "999") & ("`stage`i'zval'" == "999") {
			local stage`i'zval = invnormal(1 - `stage`i'pval')
		}
	}
	
	* if z-values are specified then calculate stagewise p-values for completeness
	forvalues i = 1/2 {
	    if ("`stage`i'zval'" != "999") & ("`stage`i'pval'" == "999") {
			local stage`i'pval = 1- normal(`stage`i'zval')
		}
	}
	
	* calculate the Z critical value threshold for the final test corresponding to a given two-sided type I error rate
	local Zcrit = invnormal(`alpha_z'/2)

	* overall combination test rejection region of H0 : overall Z test and corresponding p-value 
	local incZ : di %12.11f ((`stage1wgt'*`stage1zval') + (`stage2wgt'*`stage2zval'))
	local incp : di %12.11f (1 - normal(`incZ'))
	
	* scalars to be returned after running the program
	forvalues i = 1/2 {
	    return scalar stage`i'Z 	= `stage`i'zval'
		return scalar stage`i'P 	= `stage`i'pval'
		return scalar stage`i'wgt	= `stage`i'wgt'
	}
	return scalar Zcrit 	= `Zcrit'
	return scalar Overall_P = `incp'
	return scalar Overall_Z = `incZ'
	
	* decision-making: reject H0 if incp < alphaZ or incZ < Zcrit
	if  (`incp' < `alpha_z') {
		di "Reject H0: overall p-value (`incp') < `alpha_z'"
	}
	else if (`incp' == `alpha_z') {
		di "Cannot reject H0: overall p-value  (`incp') = `alpha_z'"
	}
	else if (`incp' > `alpha_z') {
		di "Cannot reject H0: overall p-value (`incp') > `alpha_z'"
	}


end // end of prograpm

	* set up equal weights such that: w1^2 +w2^2 = 1 

	local w1 = sqrt(0.5)
	local w2 = sqrt(0.5)
	
	* run the program with specified weights and stagewise Z test statistics obtained form fitting a logistic regression model (specific to RATPAC trial).
	ssrtest, stage1wgt(`w1') stage2wgt(`w2')  alpha_z(0.05) stage1zval(6.50) stage2zval(8.37)
	* return stored essential values
	return list 
	 
ex
 
 


